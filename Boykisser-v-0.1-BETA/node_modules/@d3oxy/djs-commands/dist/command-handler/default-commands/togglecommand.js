"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const CommandType_1 = __importDefault(require("../../utils/CommandType"));
const discord_js_1 = require("discord.js");
module.exports = {
    description: "Toggle a command on or off.",
    type: CommandType_1.default.SLASH,
    guildOnly: true,
    permissions: [discord_js_1.PermissionFlagsBits.Administrator],
    options: [
        {
            name: "command",
            description: "The command to toggle.",
            required: true,
            type: discord_js_1.ApplicationCommandOptionType.String,
            autocomplete: true,
        },
    ],
    autocomplete: (command) => {
        return [...command.instance.commandHandler.commands.keys()];
    },
    callback: async ({ instance, guild, text: commandName, interaction, }) => {
        if (!guild ||
            (instance.defaultCommand.testOnly &&
                !instance.testServers.includes(guild?.id)))
            return "This default command is registered as test server only, and can only be ran on the test servers.";
        const { disabledCommands } = instance.commandHandler;
        if (disabledCommands.isDisabled(guild.id, commandName)) {
            await disabledCommands.enable(guild.id, commandName);
            return interaction.reply(`Enabled \`${commandName}\`!`);
        }
        else {
            await disabledCommands.disable(guild.id, commandName);
            return interaction.reply(`Disabled \`${commandName}\`!`);
        }
    },
};
